[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 101.8278ms
[debug]       Load.loadUnit: defsScala took 0.3751ms
[debug] [Loading] Scanning directory C:\Users\lmedem\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lmedem\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.0175 ms
[debug]           Load.resolveProject(global-plugins) took 67.3058ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lmedem\.sbt\1.0\plugins, plugins: List(<none>))) took 117.0472ms
[debug] [Loading] Done in C:\Users\lmedem\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 145.1431ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2667ms
[debug]     Load.loadUnit(file:/C:/Users/lmedem/.sbt/1.0/plugins/, ...) took 259.0521ms
[debug]   Load.apply: load took 493.2086ms
[debug]   Load.apply: resolveProjects took 8.0641ms
[debug]   Load.apply: finalTransforms took 62.9949ms
[debug]   Load.apply: config.delegates took 8.3879ms
[debug]   Load.apply: Def.make(settings)... took 389.5429ms
[debug]   Load.apply: structureIndex took 109.9883ms
[debug]   Load.apply: mkStreams took 1.3932ms
[info] loading global plugins from C:\Users\lmedem\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2265.4246ms
[debug]           Load.loadUnit: plugins took 18.2691ms
[debug]           Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9306 ms
[debug]               Load.resolveProject(scalatageschaucrawler-build) took 1.5354ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalatageschaucrawler-build, base: C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project, plugins: List(<none>))) took 3.9956ms
[debug] [Loading] Done in C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project, returning: (scalatageschaucrawler-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7.2225ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0104ms
[debug]         Load.loadUnit(file:/C:/Users/lmedem/IdeaProjects/ScalaTageschauCrawler/project/, ...) took 26.3399ms
[debug]       Load.apply: load took 28.1624ms
[debug]       Load.apply: resolveProjects took 0.2136ms
[debug]       Load.apply: finalTransforms took 13.901ms
[debug]       Load.apply: config.delegates took 0.5755ms
[debug]       Load.apply: Def.make(settings)... took 89.9337ms
[debug]       Load.apply: structureIndex took 27.8385ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 401.9298ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler
[debug]       Load.loadUnit: mkEval took 4.4724ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3683 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.2771ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler, plugins: List(<none>))) took 5.5316ms
[debug] [Loading] Done in C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1829.6616ms
[debug]     Load.loadUnit: cleanEvalClasses took 20.4376ms
[debug]   Load.loadUnit(file:/C:/Users/lmedem/IdeaProjects/ScalaTageschauCrawler/, ...) took 2252.7728ms
[debug] Load.apply: load took 2254.1087ms
[debug] Load.apply: resolveProjects took 0.0989ms
[debug] Load.apply: finalTransforms took 9.9917ms
[debug] Load.apply: config.delegates took 0.3628ms
[debug] Load.apply: Def.make(settings)... took 64.8215ms
[debug] Load.apply: structureIndex took 26.5895ms
[debug] Load.apply: mkStreams took 0.002ms
[info] set current project to TageschauCrawler (in build file:/C:/Users/lmedem/IdeaProjects/ScalaTageschauCrawler/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-60001d5fdbeeb0f48490
[debug] Writing bsp connection file
[info] started sbt server
