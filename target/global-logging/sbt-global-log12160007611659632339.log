[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 104.4166ms
[debug]       Load.loadUnit: defsScala took 0.4084ms
[debug] [Loading] Scanning directory C:\Users\lmedem\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lmedem\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.9958 ms
[debug]           Load.resolveProject(global-plugins) took 55.7794ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\lmedem\.sbt\1.0\plugins, plugins: List(<none>))) took 106.7504ms
[debug] [Loading] Done in C:\Users\lmedem\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 135.8191ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3151ms
[debug]     Load.loadUnit(file:/C:/Users/lmedem/.sbt/1.0/plugins/, ...) took 251.9542ms
[debug]   Load.apply: load took 479.2283ms
[debug]   Load.apply: resolveProjects took 7.2656ms
[debug]   Load.apply: finalTransforms took 62.5572ms
[debug]   Load.apply: config.delegates took 7.0227ms
[debug]   Load.apply: Def.make(settings)... took 404.9989ms
[debug]   Load.apply: structureIndex took 108.4892ms
[debug]   Load.apply: mkStreams took 1.4609ms
[info] loading global plugins from C:\Users\lmedem\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2245.9739ms
[debug]           Load.loadUnit: plugins took 26.6588ms
[debug]           Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.179 ms
[debug]               Load.resolveProject(scalatageschaucrawler-build) took 1.559ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalatageschaucrawler-build, base: C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project, plugins: List(<none>))) took 4.346ms
[debug] [Loading] Done in C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project, returning: (scalatageschaucrawler-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6.8686ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0178ms
[debug]         Load.loadUnit(file:/C:/Users/lmedem/IdeaProjects/ScalaTageschauCrawler/project/, ...) took 34.5111ms
[debug]       Load.apply: load took 36.3218ms
[debug]       Load.apply: resolveProjects took 0.121ms
[debug]       Load.apply: finalTransforms took 14.4113ms
[debug]       Load.apply: config.delegates took 0.4408ms
[debug]       Load.apply: Def.make(settings)... took 95.7934ms
[debug]       Load.apply: structureIndex took 31.632ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 391.736ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler
[debug]       Load.loadUnit: mkEval took 5.359ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0764 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.2902ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler, plugins: List(<none>))) took 6.6597ms
[debug] [Loading] Done in C:\Users\lmedem\IdeaProjects\ScalaTageschauCrawler, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 210.136ms
[debug]     Load.loadUnit: cleanEvalClasses took 17.2471ms
[debug]   Load.loadUnit(file:/C:/Users/lmedem/IdeaProjects/ScalaTageschauCrawler/, ...) took 619.9295ms
[debug] Load.apply: load took 621.5264ms
[debug] Load.apply: resolveProjects took 0.1311ms
[debug] Load.apply: finalTransforms took 8.6181ms
[debug] Load.apply: config.delegates took 0.3623ms
[debug] Load.apply: Def.make(settings)... took 66.031ms
[debug] Load.apply: structureIndex took 38.9299ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to TageschauCrawler (in build file:/C:/Users/lmedem/IdeaProjects/ScalaTageschauCrawler/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-60001d5fdbeeb0f48490
[debug] Writing bsp connection file
[info] started sbt server
